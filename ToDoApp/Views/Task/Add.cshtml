@using ToDoApp.Core.Helpers
@model ToDoApp.UI.ViewModel.Task.TaskViewModel
@{
	ViewBag.Title = "Add Task";
}
<h2>Add Task</h2>

@using (Html.BeginHorizontalForm())
{
	<div class="form-group">
		@Html.LabelFor(model => model.Description, new { @class = "col-sm-2 control-label" })
		<div class="col-sm-10">
			@Html.TextBoxFor(model => model.Description, new { @class = "form-control" })
			@Html.ValidationMessageFor(model => model.Description)
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.DueDate, new { @class = "col-sm-2 control-label" })
		<div class="col-sm-10">
			@Html.TextBoxFor(model => model.DueDate, new { @class = "form-control date-picker" })
			@Html.ValidationMessageFor(model => model.DueDate)
		</div>
	</div>
        
	<div class="form-group">
		@Html.LabelFor(model => model.Category, new { @class = "col-sm-2 control-label" })
		<div class="col-sm-10">
			@Html.DropDownListFor(model => model.Category, Model.CategoryList, new { @class = "form-control" })
			@Html.ValidationMessageFor(model => model.Category)
		</div>
	</div>
	
	<div class="form-group">
		@Html.LabelFor(model => model.Priority, new { @class = "col-sm-2 control-label" })
		<div class="col-sm-10">
			@Html.DropDownListFor(model => model.Priority, Model.PriorityList, new { @class = "form-control" })
			@Html.ValidationMessageFor(model => model.Priority)
		</div>
	</div>
	
	<div class="form-group">
		@Html.LabelFor(model => model.Status, new { @class = "col-sm-2 control-label" })
		<div class="col-sm-10">
			@Html.DropDownListFor(model => model.Status, Model.StatusList, new { @class = "form-control" })
			@Html.ValidationMessageFor(model => model.Status)
		</div>
	</div>
	
	<p>
		<input type="submit" value="Add Task" />
	</p>
}
<div>
	@Html.ActionLink("Back to List", "List")
</div>
@section scripts {
	<script src="../../Scripts/Custom/Pages/AddTask.js" type="text/javascript"></script>
}
